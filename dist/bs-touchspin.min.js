(function($){"use strict";$.bsTouchspin={setDefaults:function(options){this.defaults=$.extend(true,{},this.defaults,options||{})},getDefaults:function(){return this.defaults},setConfig:function(options){this.config=$.extend(true,{},this.config,options||{})},getConfig:function(){return this.config},defaults:{size:null,step:"any",min:null,max:null,decimals:null,prefix:null,postfix:null,allowInput:true,buttons:{up:{class:"btn-secondary rounded-end-pill fw-bold",icon:"bi bi-plus-lg",iconSetZero:"bi bi-trash"},down:{class:"btn-secondary rounded-start-pill fw-bold",icon:"bi bi-dash-lg",iconSetZero:"bi bi-trash"}},formatter:"number",onInit:function(value){},onStart:function(value){},onStop:function(value){}},config:{minSpeed:1,startSpeed:600,delay:1e3,locale:"en-US",inputMinWidth:75,maximumMax:2**31-1,maximumMin:-(2**31)},utils:{getDecimalBySteps(num){if(isNaN(num)){return 0}const decimalPart=num.toString().split(".")[1];return decimalPart?decimalPart.length:0},formatNumber(number,decimalPlaces=2,locale="en-US"){return new Intl.NumberFormat(locale,{minimumFractionDigits:decimalPlaces,maximumFractionDigits:decimalPlaces}).format(number)},formatPercent(value,decimals=2,locale="en-US"){return new Intl.NumberFormat(locale,{style:"percent",minimumFractionDigits:decimals,maximumFractionDigits:decimals}).format(value)},formatCurrency(value,decimals=2,locale="en-US"){return new Intl.NumberFormat(locale,{style:"currency",currency:"EUR",minimumFractionDigits:decimals,maximumFractionDigits:decimals}).format(value)}}};const namespace=".bs.touchspin";const wrapperClass="bs-touchspin-wrapper";const wrapperClassFormatted="bs-touchspin-formatted-wrapper";function formatNumber(number,decimalPlaces=2){return new Intl.NumberFormat("de-DE",{minimumFractionDigits:decimalPlaces,maximumFractionDigits:decimalPlaces}).format(number)}function getSettings($input){return $input.data("touchspin")}function setSettings($input,settings){$input.data("touchspin",settings)}const getWrapper=function($input){return $input.closest("."+wrapperClass)};function updateButtonStates($input){const wrapper=getWrapper($input);const settings=getSettings($input);const btnDown=wrapper.find("[data-touchspin-down]");const btnUp=wrapper.find("[data-touchspin-up]");const step=settings.step;const value=parseFloat($input.val())||0;const decimals=settings.decimals||0;const roundToDecimals=val=>{const num=parseFloat(val);return isNaN(num)?0:Number(num.toFixed(decimals))};const roundedValue=roundToDecimals(value);const stepAboveZero=roundToDecimals(step);const stepBelowZero=roundToDecimals(-step);const btnUpIcon=btnUp.find("i");const btnDownIcon=btnDown.find("i");if(roundedValue===stepBelowZero){btnUpIcon.removeClass(settings.buttons.up.icon).addClass(settings.buttons.up.iconSetZero)}else{btnUpIcon.removeClass(settings.buttons.up.iconSetZero).addClass(settings.buttons.up.icon)}if(roundedValue===stepAboveZero){btnDownIcon.removeClass(settings.buttons.down.icon).addClass(settings.buttons.down.iconSetZero)}else{btnDownIcon.removeClass(settings.buttons.down.iconSetZero).addClass(settings.buttons.down.icon)}if(settings.min!==null&&roundedValue<=roundToDecimals(settings.min)){btnDown.prop("disabled",true)}else{btnDown.prop("disabled",false)}if(settings.max!==null&&roundedValue>=roundToDecimals(settings.max)){btnUp.prop("disabled",true)}else{btnUp.prop("disabled",false)}}function validateValue($input,isFinal=false){const wrapper=getWrapper($input);const settings=getSettings($input);let inputValue=$input.val();const vars=getVars($input);inputValue=inputValue.replace(",",".");let numericValue=parseFloat(inputValue);if(isNaN(numericValue)){numericValue=isFinal?0:null}const decimals=settings.decimals||0;if(numericValue!==null){numericValue=Number(numericValue.toFixed(decimals));if(settings.min!==null&&numericValue<settings.min){numericValue=settings.min}if(settings.max!==null&&numericValue>settings.max){numericValue=settings.max}}else{numericValue=0}$input.val(numericValue.toFixed(decimals));if(isFinal){const startValue=vars.startValue||0;const stopValue=numericValue;const diff=parseFloat((stopValue-startValue).toFixed(decimals));vars.startValue=null;$input.trigger(`stop${namespace}`,[stopValue,diff]);if(typeof settings.onStop==="function"){settings.onStop(stopValue,diff)}setVars($input,vars)}updateButtonStates($input);return numericValue}function changeValueByBtnClick($input){const settings=getSettings($input);const vars=getVars($input);let value=parseFloat($input.val())||0;const roundToDecimals=(num,decimals)=>{const factor=Math.pow(10,decimals);return Math.round(num*factor)/factor};const decimals=settings.decimals||0;value=value+vars.direction*settings.step;value=roundToDecimals(value,decimals).toFixed(decimals);if(settings.min!==null&&parseFloat(value)<settings.min){value=parseFloat(settings.min).toFixed(settings.decimals||0)}if(settings.max!==null&&parseFloat(value)>settings.max){value=parseFloat(settings.max).toFixed(settings.decimals||0)}$input.val(value);toggleFormatted($input,true);updateButtonStates($input);handleInputWidth($input)}function getVars($input){if(!$input.data("vars")){$input.data("vars",{stepUnknown:false,timeout:null,interval:null,stopDelay:null,minSpeed:$.bsTouchspin.config.minSpeed,speed:$.bsTouchspin.config.startSpeed,isStarted:false,direction:null,startValue:null})}return $input.data("vars")}function setVars($input,vars){$input.data("vars",vars)}function startIncrement($input){const vars=getVars($input);if(vars.speed>=vars.minSpeed){vars.speed*=.95}changeValueByBtnClick($input);vars.interval=setTimeout(function(){startIncrement($input)},vars.speed);setVars($input,vars)}function events($input){const wrapper=getWrapper($input);const settings=getSettings($input);const btnDown=wrapper.find("[data-touchspin-down]");const btnUp=wrapper.find("[data-touchspin-up]");wrapper.on(`click${namespace}`,"."+wrapperClassFormatted,function(e){e.preventDefault();const formattedWrapper=$(e.currentTarget);const input=formattedWrapper.closest("."+wrapperClass).find("input");const settings=getSettings(input);if(settings.allowInput){toggleFormatted(input,false)}}).on(`mousedown${namespace} touchstart${namespace}`,"[data-touchspin-down], [data-touchspin-up]",function(e){e.preventDefault();const btn=$(e.currentTarget);if(btn.prop("disabled")){return}const input=btn.closest("."+wrapperClass).find("input");clearAllTimers(input);const vars=getVars(input);input.prop("readonly",true);vars.direction=btn.is(btnDown)?-1:1;vars.speed=$.bsTouchspin.config.startSpeed;if(!vars.isStarted){const startValue=parseFloat(input.val())||0;input.trigger(`start${namespace}`,[startValue]);vars.startValue=startValue;vars.isStarted=true;if(typeof settings.onStart==="function"){settings.onStart(startValue)}setVars(input,vars)}changeValueByBtnClick(input);vars.timeout=setTimeout(function(){startIncrement(input)},300);setVars(input,vars)}).on(`mouseup${namespace} mouseleave${namespace} touchend${namespace}`,"[data-touchspin-down], [data-touchspin-up]",function(e){e.preventDefault();const btn=$(e.currentTarget);const input=btn.closest("."+wrapperClass).find("input");const vars=getVars(input);input.prop("readonly",false);if(!vars.isStarted){return}clearAllTimers(input);vars.stopDelay=setTimeout(function(){const settings=getSettings(input);const startValue=vars.startValue||0;const stopValue=parseFloat(input.val())||0;const diff=parseFloat((stopValue-startValue).toFixed(settings.decimals));vars.startValue=null;input.trigger(`stop${namespace}`,[stopValue,diff]);if(typeof settings.onStop==="function"){settings.onStop(stopValue,diff)}vars.isStarted=false;setVars(input,vars)},$.bsTouchspin.config.delay);setVars(input,vars)});let inputProcessed=false;$input.on(`focusin${namespace}`,function(e){const input=$(e.currentTarget);const settings=getSettings($input);clearAllTimers(input);const vars=getVars(input);if(!vars.isStarted){const startValue=parseFloat(input.val())||0;input.trigger(`start${namespace}`,[startValue]);vars.startValue=startValue;vars.isStarted=true;if(typeof settings.onStart==="function"){settings.onStart(startValue)}setVars(input,vars)}}).on(`keydown${namespace}`,function(e){if(e.key==="Enter"){e.preventDefault();e.stopPropagation();const input=$(e.currentTarget);if(!inputProcessed){handleInput(input);inputProcessed=true}}}).on(`blur${namespace}`,function(e){e.stopPropagation();const input=$(e.currentTarget);if(!inputProcessed){handleInput(input);inputProcessed=true}}).on(`focus${namespace}`,function(){inputProcessed=false}).on(`keyup${namespace}`,function(e){e.preventDefault();e.stopPropagation();const input=$(e.currentTarget);const vars=getVars(input);if(vars.stepUnknown){let settings=getSettings($input);const data=calculateStepByUnknown(input);settings.decimals=data.decimals;settings.step=data.step;setSettings(input,settings)}handleInputWidth(input)});updateButtonStates($input)}function handleInput($currentInput){clearAllTimers($currentInput);const vars=getVars($currentInput);validateValue($currentInput,true);toggleFormatted($currentInput,true);vars.isStarted=false;setVars($currentInput,vars);handleInputWidth($currentInput)}function clearAllTimers($input){const vars=getVars($input);if(vars.timeout){clearTimeout(vars.timeout);vars.timeout=null}if(vars.interval){clearTimeout(vars.interval);vars.interval=null}if(vars.stopDelay){clearTimeout(vars.stopDelay);vars.stopDelay=null}setVars($input,vars)}function toggleFormatted($input,show){const wrapper=getWrapper($input);const settings=getSettings($input);const $formattedWrapper=wrapper.find("."+wrapperClassFormatted);if(typeof settings.formatter==="string"){let format;switch(settings.formatter){case"currency":{format=$.bsTouchspin.utils.formatCurrency($input.val(),settings.decimals,$.bsTouchspin.config.locale)}break;case"percent":{format=$.bsTouchspin.utils.formatPercent($input.val(),settings.decimals,$.bsTouchspin.config.locale)}break;default:{format=$.bsTouchspin.utils.formatNumber($input.val(),settings.decimals,$.bsTouchspin.config.locale)}}$formattedWrapper.html("<div>"+format+"</div>")}else if(typeof settings.formatter==="function"){settings.formatter($input.val(),settings.decimals,$.bsTouchspin.config.locale)}if($formattedWrapper.length){if(show){$formattedWrapper.addClass("d-flex");$formattedWrapper.show();$input.attr("type","hidden")}else{$formattedWrapper.removeClass("d-flex");$formattedWrapper.hide();$input.attr("type","text");$input.focus();$input[0].select();$input.trigger(`focusin${namespace}`)}}}function buildTouchspin($input){const settings=getSettings($input);let $inputGroup=$input.closest(".input-group");if(!$inputGroup.length){$inputGroup=$("<div>",{class:"input-group"}).insertAfter($input);$input.appendTo($inputGroup)}$inputGroup.addClass(wrapperClass);$inputGroup.addClass("flex-nowrap w-auto");if($.inArray(settings.size,["sm","lg"])>=0){$inputGroup.addClass("input-group-"+settings.size)}$input.addClass("form-control text-center flex-grow-0").attr("type","text");if(["string","function"].includes(typeof settings?.formatter)){$("<div>",{class:"input-group-text d-flex justify-content-center user-select-none "+wrapperClassFormatted}).insertAfter($input);toggleFormatted($input,true)}if(!settings.allowInput){$input.prop("disabled",true)}$("<span>",{"data-prefix":"",class:"input-group-text px-2"}).prependTo($inputGroup);setPrefix($input,settings.prefix);const btnMinWidth=settings.size==="lg"?40:32;$("<button>",{type:"button","data-touchspin-down":"",css:{minWidth:btnMinWidth+"px"},class:"btn "+settings.buttons.down.class,html:`<i class="${settings.buttons.down.icon}"></i>`}).prependTo($inputGroup);$("<span>",{"data-postfix":"",class:"input-group-text px-2"}).appendTo($inputGroup);setPostfix($input,settings.postfix);$("<button>",{type:"button",css:{minWidth:btnMinWidth+"px"},"data-touchspin-up":"",class:"btn "+settings.buttons.up.class,html:`<i class="${settings.buttons.up.icon}"></i>`}).appendTo($inputGroup);handleInputWidth($input)}function calculateNeededWidth($element){const value=$element.is("input")?$element.val()||"":$element.text();const $tempSpan=$("<span>").text(value).css({visibility:"hidden",position:"absolute",top:"-9999px",left:"-9999px",whiteSpace:"pre",font:$element.css("font")||"14px Arial, sans-serif"}).appendTo("body");const inputWidth=Math.round($tempSpan.width()+parseFloat($element.css("padding-left")||0)+parseFloat($element.css("padding-right")||0));$tempSpan.remove();return inputWidth}function handleInputWidth($input){const wrapper=getWrapper($input);const wrapperFormatter=wrapper.find("."+wrapperClassFormatted);const minWidth=$.bsTouchspin.config.inputMinWidth;let inputWidth=calculateNeededWidth($input);if(wrapperFormatter.length){let formatterWidth=calculateNeededWidth(wrapperFormatter);if(formatterWidth>inputWidth){inputWidth=Math.max(formatterWidth,minWidth)}}inputWidth=Math.round(Math.max(inputWidth,minWidth));$input.css("width",inputWidth+"px");if(wrapperFormatter.length){wrapperFormatter.css("width",inputWidth+"px")}}function setPostfix($input,postfix=null){const $postfix=$input.closest("."+wrapperClass).find("[data-postfix]");if($postfix.length){const isEmpty=isValueEmpty(postfix);const postfixHtml=!isEmpty?postfix:"";$postfix.html(postfixHtml);if(isEmpty){$postfix.addClass("d-none")}else{$postfix.removeClass("d-none")}}}function setPrefix($input,prefix=null){const $prefix=$input.closest("."+wrapperClass).find("[data-prefix]");if($prefix.length){const isEmpty=isValueEmpty(prefix);const prefixHtml=!isEmpty?prefix:"";$prefix.html(prefixHtml);if(isEmpty){$prefix.addClass("d-none")}else{$prefix.removeClass("d-none")}}}function isValueEmpty(value){if(value===null||value===undefined){return true}if(Array.isArray(value)){return value.length===0}if(typeof value==="string"){return value.trim().length===0}return false}function calculateStepByUnknown($input){const currentValue=$input.val().replace(",",".")||0;const decimals=$.bsTouchspin.utils.getDecimalBySteps(currentValue);return{step:Math.pow(10,-decimals),decimals:decimals}}function destroyTouchspin($input){const wrapper=getWrapper($input);if(wrapper.length){wrapper.before($input);wrapper.remove()}clearAllTimers($input);const originInformation=$input.data("origin");$input.attr("class",originInformation.class);$input.attr("type",originInformation.type);$input.attr("style",originInformation.style);$input.removeData(["touchspin","vars","origin"]).off(namespace)}$.fn.bsTouchspin=function(methodOrOption,...args){if($(this).length>1){return $(this).each(function(i,el){return $(el).bsTouchspin(methodOrOption)})}const $input=$(this);if(!$input.data("touchspin")){const originInformation={class:$input.attr("class")||"",style:$input.attr("style")||"",type:$input.attr("type")||""};$input.data("origin",originInformation);const optionsGiven=typeof methodOrOption==="object";const options=optionsGiven?methodOrOption:{};const inputNumber={};if($input.attr("step")){inputNumber.step=parseFloat($input.attr("step"))}if($input.attr("min")){inputNumber.min=parseFloat($input.attr("min"))}if($input.attr("max")){inputNumber.max=parseFloat($input.attr("max"))}const settings=$.extend(true,{},$.bsTouchspin.defaults,options,$input.data()||{},inputNumber);if(!settings.step){settings.step="any"}let stepUnknown=false;if(settings.step==="any"){stepUnknown=true;const data=calculateStepByUnknown($input);settings.decimals=data.decimals;settings.step=data.step}else{settings.decimals=$.bsTouchspin.utils.getDecimalBySteps(settings.step)}if(settings.max===null){settings.max=$.bsTouchspin.config.maximumMax}if(settings.min===null){settings.min=$.bsTouchspin.config.maximumMin}if(typeof settings.formatter==="string"){if(["number","currency","percent"].indexOf(settings.formatter)<0){settings.formatter="number"}}const vars=getVars($input);vars.stepUnknown=stepUnknown;setVars($input,vars);setSettings($input,settings);buildTouchspin($input);events($input);const startValue=validateValue($input,false);setTimeout(function(){$input.trigger(`init${namespace}`,[startValue])},0);if(typeof settings.onInit==="function"){settings.onInit(startValue)}}const methodGiven=typeof methodOrOption==="string";let $return=$input;if(methodGiven){switch(methodOrOption){case"val":{const newValue=parseFloat(args.length?args[0]:0);$input.val(newValue);validateValue($input,false);toggleFormatted($input,true)}break;case"setPrefix":{const prefix=args.length?args[0]:null;const settings=getSettings($input);settings.prefix=prefix;setSettings($input,settings);setPrefix($input,prefix);handleInputWidth($input)}break;case"setPostfix":{const postfix=args.length?args[0]:null;const settings=getSettings($input);settings.postfix=postfix;setSettings($input,settings);setPostfix($input,postfix);handleInputWidth($input)}break;case"destroy":{destroyTouchspin($input)}break}}return $return}})(jQuery);